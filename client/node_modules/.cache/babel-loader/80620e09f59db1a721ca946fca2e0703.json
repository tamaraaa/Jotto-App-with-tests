{"ast":null,"code":"import { getLetterMatchCount } from \"../helpers\";\nexport const actionTypes = {\n  CORRECT_GUESS: \"CORRECT_GUESS\",\n  GUESS_WORD: \"GUESS_WORD\"\n};\nexport const guessWord = guessedWord => {\n  return function (dispatch, getState) {\n    const secretWord = getState().secretWord;\n    const letterMatchCount = getLetterMatchCount(guessWord, secretWord);\n    console.log(guessedLetterSet);\n    dispatch({\n      type: actionTypes.GUESS_WORD,\n      payload: {\n        guessedWord,\n        letterMatchCount\n      }\n    });\n\n    if (guessWord === secretWord) {\n      dispatch({\n        type: actionTypes.CORRECT_GUESS\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/macbook/Desktop/jotto/src/actions/index.js"],"names":["getLetterMatchCount","actionTypes","CORRECT_GUESS","GUESS_WORD","guessWord","guessedWord","dispatch","getState","secretWord","letterMatchCount","console","log","guessedLetterSet","type","payload"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,YAApC;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,aAAa,EAAE,eADU;AAEzBC,EAAAA,UAAU,EAAE;AAFa,CAApB;AAKP,OAAO,MAAMC,SAAS,GAAGC,WAAW,IAAI;AACtC,SAAO,UAASC,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,UAAMC,UAAU,GAAGD,QAAQ,GAAGC,UAA9B;AACA,UAAMC,gBAAgB,GAAGT,mBAAmB,CAACI,SAAD,EAAYI,UAAZ,CAA5C;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AAEAN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEZ,WAAW,CAACE,UADX;AAEPW,MAAAA,OAAO,EAAE;AAAET,QAAAA,WAAF;AAAeI,QAAAA;AAAf;AAFF,KAAD,CAAR;;AAIA,QAAIL,SAAS,KAAKI,UAAlB,EAA8B;AAC5BF,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEZ,WAAW,CAACC;AADX,OAAD,CAAR;AAGD;AACF,GAdD;AAeD,CAhBM","sourcesContent":["import { getLetterMatchCount } from \"../helpers\";\n\nexport const actionTypes = {\n  CORRECT_GUESS: \"CORRECT_GUESS\",\n  GUESS_WORD: \"GUESS_WORD\"\n};\n\nexport const guessWord = guessedWord => {\n  return function(dispatch, getState) {\n    const secretWord = getState().secretWord;\n    const letterMatchCount = getLetterMatchCount(guessWord, secretWord);\n    console.log(guessedLetterSet);\n\n    dispatch({\n      type: actionTypes.GUESS_WORD,\n      payload: { guessedWord, letterMatchCount }\n    });\n    if (guessWord === secretWord) {\n      dispatch({\n        type: actionTypes.CORRECT_GUESS\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}