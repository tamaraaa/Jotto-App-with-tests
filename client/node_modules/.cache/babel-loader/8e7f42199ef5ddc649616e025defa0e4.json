{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/jotto/src/GuessedWords.js\";\nimport React from \"react\";\n\nconst GuessedWords = props => {\n  let contents;\n\n  if (props.guessedWords.length === 0) {\n    contents = React.createElement(\"span\", {\n      \"data-test\": \"guess-instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, \"Guess the secret word\");\n  } else {\n    const guessedWordsRow = props.guessedWords.map((word, index) => {\n      return React.createElement(\"tr\", {\n        \"data-test\": \"guessed-word\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, word.guessedWord), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, word.letterMatchCount));\n    });\n    contents = React.createElement(\"div\", {\n      \"data-test\": \"guessed-words\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Guessed Words\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Guess\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Matching Letters\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, guessedWordsRow)));\n  }\n\n  return React.createElement(\"div\", {\n    \"data-test\": \"component-guessed-words\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, contents);\n};\n\nexport default GuessedWords;","map":{"version":3,"sources":["/Users/macbook/Desktop/jotto/src/GuessedWords.js"],"names":["React","GuessedWords","props","contents","guessedWords","length","guessedWordsRow","map","word","index","guessedWord","letterMatchCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,MAAIC,QAAJ;;AACA,MAAID,KAAK,CAACE,YAAN,CAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACnCF,IAAAA,QAAQ,GACN;AAAM,mBAAU,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF;AAGD,GAJD,MAIO;AACL,UAAMG,eAAe,GAAGJ,KAAK,CAACE,YAAN,CAAmBG,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9D,aACE;AAAI,qBAAU,cAAd;AAA6B,QAAA,GAAG,EAAEA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,WAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,gBAAV,CAFF,CADF;AAMD,KAPuB,CAAxB;AAQAR,IAAAA,QAAQ,GACN;AAAK,mBAAU,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQG,eAAR,CAPF,CAFF,CADF;AAcD;;AACD,SAAO;AAAK,iBAAU,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CH,QAA1C,CAAP;AACD,CA/BD;;AAgCA,eAAeF,YAAf","sourcesContent":["import React from \"react\";\n\nconst GuessedWords = props => {\n  let contents;\n  if (props.guessedWords.length === 0) {\n    contents = (\n      <span data-test=\"guess-instructions\">Guess the secret word</span>\n    );\n  } else {\n    const guessedWordsRow = props.guessedWords.map((word, index) => {\n      return (\n        <tr data-test=\"guessed-word\" key={index}>\n          <td>{word.guessedWord}</td>\n          <td>{word.letterMatchCount}</td>\n        </tr>\n      );\n    });\n    contents = (\n      <div data-test=\"guessed-words\">\n        <h3>Guessed Words</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>Guess</th>\n              <th>Matching Letters</th>\n            </tr>\n          </thead>\n          <tbody>{guessedWordsRow}</tbody>\n        </table>\n      </div>\n    );\n  }\n  return <div data-test=\"component-guessed-words\">{contents}</div>;\n};\nexport default GuessedWords;\n"]},"metadata":{},"sourceType":"module"}